{"ast":null,"code":"import _classCallCheck from \"/home/fernando/prueb/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nvar config = {\n  apiKey: \"AIzaSyBvXXZwnBCJ3Z0iWQAFtqI9Q8ixZelhvGU\",\n  authDomain: \"bdsurvey-4d97c.firebaseapp.com\",\n  databaseURL: \"https://bdsurvey-4d97c.firebaseio.com\",\n  projectId: \"bdsurvey-4d97c\",\n  storageBucket: \"bdsurvey-4d97c.appspot.com\",\n  messagingSenderId: \"792353618616\"\n};\n\nvar Firebase = function Firebase() {\n  var _this = this;\n\n  _classCallCheck(this, Firebase);\n\n  this.doCreateUserWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  this.doSignInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  this.doSignOut = function () {\n    return _this.auth.signOut();\n  };\n\n  this.doPasswordReset = function (email) {\n    return _this.auth.sendPasswordResetEmail(email);\n  };\n\n  this.doPasswordUpdate = function (password) {\n    return _this.auth.currentUser.updatePassword(password);\n  };\n\n  this.user = function (uid) {\n    return _this.db.ref(\"users/\".concat(uid));\n  };\n\n  this.users = function () {\n    return _this.db.ref('usuarios');\n  };\n\n  this.orgs = function () {\n    return _this.db.ref('usuarios');\n  };\n\n  app.initializeApp(config);\n  this.auth = app.auth();\n  this.db = app.database();\n} // *** Auth API ***\n;\n\nexport default Firebase;","map":{"version":3,"sources":["/home/fernando/prueb/src/components/Firebase/firebase.js"],"names":["app","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","orgs","initializeApp","database"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AACA,OAAO,mBAAP;AAEA,IAAMC,MAAM,GAAG;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEXC,EAAAA,UAAU,EAAE,gCAFD;AAGXC,EAAAA,WAAW,EAAE,uCAHF;AAIXC,EAAAA,SAAS,EAAE,gBAJA;AAKXC,EAAAA,aAAa,EAAE,4BALJ;AAMXC,EAAAA,iBAAiB,EAAE;AANR,CAAf;;IASMC,Q,GACJ,oBAAc;AAAA;;AAAA;;AAAA,OASdC,gCATc,GASqB,UAACC,KAAD,EAAQC,QAAR;AAAA,WACjC,KAAI,CAACC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CADiC;AAAA,GATrB;;AAAA,OAYdG,4BAZc,GAYiB,UAACJ,KAAD,EAAQC,QAAR;AAAA,WAC7B,KAAI,CAACC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAD6B;AAAA,GAZjB;;AAAA,OAedK,SAfc,GAeF;AAAA,WAAM,KAAI,CAACJ,IAAL,CAAUK,OAAV,EAAN;AAAA,GAfE;;AAAA,OAiBdC,eAjBc,GAiBI,UAAAR,KAAK;AAAA,WAAI,KAAI,CAACE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAAJ;AAAA,GAjBT;;AAAA,OAmBdU,gBAnBc,GAmBK,UAAAT,QAAQ;AAAA,WACzB,KAAI,CAACC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CADyB;AAAA,GAnBb;;AAAA,OAwBdY,IAxBc,GAwBP,UAAAC,GAAG;AAAA,WAAI,KAAI,CAACC,EAAL,CAAQC,GAAR,iBAAqBF,GAArB,EAAJ;AAAA,GAxBI;;AAAA,OA2BdG,KA3Bc,GA2BN;AAAA,WAAM,KAAI,CAACF,EAAL,CAAQC,GAAR,CAAY,UAAZ,CAAN;AAAA,GA3BM;;AAAA,OA6BdE,IA7Bc,GA6BP;AAAA,WAAM,KAAI,CAACH,EAAL,CAAQC,GAAR,CAAY,UAAZ,CAAN;AAAA,GA7BO;;AACZ1B,EAAAA,GAAG,CAAC6B,aAAJ,CAAkB5B,MAAlB;AAEA,OAAKW,IAAL,GAAYZ,GAAG,CAACY,IAAJ,EAAZ;AACA,OAAKa,EAAL,GAAUzB,GAAG,CAAC8B,QAAJ,EAAV;AACD,C,CAED;;;AAyBF,eAAetB,QAAf","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n     apiKey: \"AIzaSyBvXXZwnBCJ3Z0iWQAFtqI9Q8ixZelhvGU\",\n    authDomain: \"bdsurvey-4d97c.firebaseapp.com\",\n    databaseURL: \"https://bdsurvey-4d97c.firebaseio.com\",\n    projectId: \"bdsurvey-4d97c\",\n    storageBucket: \"bdsurvey-4d97c.appspot.com\",\n    messagingSenderId: \"792353618616\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n  // *** Auth API ***\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doPasswordUpdate = password =>\n    this.auth.currentUser.updatePassword(password);\n\n  // *** User API ***\n\n  user = uid => this.db.ref(`users/${uid}`);\n\n  //USUARIOS\n  users = () => this.db.ref('usuarios');\n  //ORGANIZACIONES\n  orgs = () => this.db.ref('usuarios');\n}\n\nexport default Firebase;\n"]},"metadata":{},"sourceType":"module"}